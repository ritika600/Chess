{"version":3,"sources":["Game.js","Square.jsx","Piece.jsx","Promote.jsx","BoardSquare.jsx","Board.jsx","App.js","reportWebVitals.js","index.js"],"names":["chess","Chess","gameSubject","BehaviorSubject","resetGame","reset","updateGame","move","from","to","promotion","tempMove","pendingPromotion","isGameOver","game_over","newGame","board","turn","result","getGameResult","localStorage","setItem","fen","next","in_checkmate","winner","in_draw","reason","in_stalemate","in_threefold_repetition","insufficient_material","Square","children","bgClass","black","id","className","Piece","piece","type","color","position","useDrag","item","collect","monitor","isDragging","drag","preview","pieceImg","DragPreviewImage","connect","src","ref","style","opacity","alt","promotionPieces","Promote","map","p","i","onClick","BoardSquare","useState","setPromotion","useDrop","accept","drop","split","promotions","moves","verbose","filter","m","console","table","some","getValue","handleMove","useEffect","subscribe","unsubscribe","Board","currBoard","setCurrBoard","getXYPosition","x","Math","abs","y","floor","isBlack","getPosition","flat","reverse","App","setBoard","setIsGameOver","setResult","setTurn","savedGame","getItem","load","initGame","game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.2da74129.chunk.js","sourcesContent":["import * as Chess from 'chess.js';\r\nimport {BehaviorSubject} from 'rxjs'\r\n\r\nconst chess = new Chess();\r\nexport const gameSubject= new BehaviorSubject()\r\nexport function initGame(){\r\n    const savedGame = localStorage.getItem('savedGame')\r\n    if (savedGame) {\r\n        chess.load(savedGame)\r\n    }\r\nupdateGame()\r\n}\r\nexport function resetGame() {\r\n    chess.reset()\r\n    updateGame()\r\n}\r\nexport function handleMove(from,to){\r\n    const promotions = chess.moves({verbose:true}).filter(m => m.promotion)\r\n    console.table(promotions)\r\n    if(promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)){\r\n    const pendingPromotion = {from, to, color:promotions[0].color}\r\n    updateGame(pendingPromotion)\r\n    }\r\n    const {pendingPromotion} = gameSubject.getValue()\r\n    if(!pendingPromotion){\r\n        move(from,to)\r\n    }\r\n    move(from,to)\r\n}\r\nexport function move(from, to,promotion){\r\n    let tempMove ={from,to}\r\n    if (promotion){\r\n        tempMove.promotion= promotion\r\n    }\r\n     const legalMove = chess.move(tempMove)\r\n     if(legalMove){\r\n        updateGame()\r\n     }\r\n}\r\nfunction updateGame(pendingPromotion){\r\n    const isGameOver = chess.game_over()\r\nconst newGame = {\r\n    board:chess.board(),\r\n    pendingPromotion,\r\n    isGameOver,\r\n    turn : chess.turn(),\r\n    result :isGameOver ? getGameResult() :null\r\n}\r\n\r\nlocalStorage.setItem('savedGame', chess.fen())\r\ngameSubject.next(newGame)\r\n}\r\nfunction getGameResult(){\r\n    if(chess.in_checkmate())\r\n{\r\n    const winner = chess.turn() === \"w\" ? 'BLACK' : 'WHITE'\r\n    return `CHECKMATE - WINNER - ${winner}`\r\n}else if (chess.in_draw()) {\r\n    let reason = '50 - MOVES - RULE'\r\n    if (chess.in_stalemate()) {\r\n        reason = 'STALEMATE'\r\n    } else if (chess.in_threefold_repetition()) {\r\n        reason = 'REPETITION'\r\n    } else if (chess.insufficient_material()) {\r\n        reason = \"INSUFFICIENT MATERIAL\"\r\n    }\r\n    return `DRAW - ${reason}`\r\n} else {\r\n    return 'UNKNOWN REASON'\r\n}\r\n}"," import React from 'react';\r\n export default function Square({children,black}){\r\n     const bgClass = black ? 'square-black' : 'square-white'\r\n    return (\r\n        <div id=\"board-square\" className={bgClass}>\r\n           {children}  \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useDrag,DragPreviewImage} from 'react-dnd'\r\nexport default function Piece({piece: {type,color},position}){\r\n    const [{isDragging} ,drag, preview ] =useDrag({\r\n        type: 'piece',\r\n        item:{ id: `${position}_${type}_${color}`},\r\n        collect: (monitor) => {\r\n            return {isDragging: !!monitor.isDragging() }\r\n        }\r\n    })\r\n    const pieceImg = `./assets/${type}_${color}.png`\r\n   return (\r\n       <>\r\n       <DragPreviewImage connect={preview} src={pieceImg}/>\r\n       <div className=\"piece-container\" ref={drag} style={{opacity:isDragging?0 :1}}>\r\n           <img src={pieceImg} className=\"piece\" alt=\"\"/>\r\n          \r\n       </div>\r\n       </>\r\n   )\r\n}","import React from 'react';\r\nimport Square from './Square'\r\nimport { move} from './Game'\r\nconst promotionPieces= ['r','n','b','q']\r\nexport default function Promote({promotion : {from ,to,color},}){\r\n    return <div className=\"w-100 h-100 d-flex flex-wrap\">{promotionPieces.map((p,i)=>(\r\n        <div key={i}   className=\"w-50 h-50\">\r\n            <Square black={i % 3 ===0}>\r\n            <div className=\"piece-container\" onClick={()=>move(from,to,p)}>\r\n                <img className=\"piece cursor-pointer\" alt=\"\" src={ `./assets/${p}_${color}.png`}/></div>\r\n            </Square>\r\n           </div>\r\n    ))}</div>\r\n}","import React, { useEffect,useState } from 'react';\r\nimport Square from './Square';\r\nimport Piece from './Piece';\r\nimport { useDrop} from 'react-dnd'\r\nimport {handleMove} from './Game'\r\nimport {gameSubject} from './Game'\r\nimport Promote from './Promote'\r\n\r\nexport default function BoardSquare({piece,black,position}){\r\n    const [promotion,setPromotion]=useState(null)\r\n    const [,drop]=useDrop({\r\n        accept: 'piece',\r\n        drop:(item)=> {\r\n            const [fromPosition]=item.id.split('_')\r\n            handleMove(fromPosition, position)},\r\n\r\n    })\r\n    useEffect(()=>{\r\n        const subscribe = gameSubject.subscribe(({pendingPromotion}) => {\r\n          pendingPromotion && pendingPromotion.to === position ?  setPromotion(pendingPromotion) : setPromotion(null)\r\n        })\r\n        return () => subscribe.unsubscribe()\r\n    },[position])\r\n    return (\r\n        <div id=\"board-square\" ref={drop}> \r\n              <Square  black={black}>\r\n                  {promotion ? (<Promote promotion={promotion}/>) : piece ?(\r\n                  <Piece piece={piece} position={position}/>)\r\n                  : null}\r\n                  </Square>\r\n        </div>\r\n    )\r\n}","import React,{useEffect,useState} from 'react';\r\nimport BoardSquare from './BoardSquare';\r\nexport default function Board({board,turn}){\r\n    const [currBoard, setCurrBoard] = useState([])\r\n    useEffect(() => {\r\n        setCurrBoard(\r\n          turn === 'w' ? board.flat() : board.flat().reverse()\r\n        )\r\n      }, [board, turn])\r\n    function getXYPosition(i){\r\n        const x = turn === 'w' ? i % 8 : Math.abs((i % 8) - 7)\r\n        const y =\r\n          turn === 'w'\r\n            ? Math.abs(Math.floor(i / 8) - 7)\r\n            : Math.floor(i / 8)\r\n        return { x, y }\r\n    }\r\n    function isBlack(i){\r\n        const {x,y} =getXYPosition(i)\r\n        return(x + y) % 2 === 1\r\n    }\r\n    function getPosition(i){\r\n        const {x,y} =getXYPosition(i)\r\n        const letter = ['a','b','c','d','e','f','g','h'][x]\r\n        return `${letter}${y + 1}`\r\n    }\r\n    return <div className=\"w-100 h-100 d-flex flex-wrap\">\r\n        {currBoard.flat( ).map((piece,i)=>(\r\n        <div key={i} className=\"square\">\r\n            <BoardSquare piece={piece} black={isBlack(i)} position={getPosition(i)} />\r\n        </div>\r\n             \r\n        ))}\r\n    </div>\r\n}","import './App.css';\nimport {gameSubject,initGame,resetGame} from './Game';\nimport React,{useEffect,useState} from 'react';\nimport Board from './Board';\n\nfunction App() {\n  const  [board,setBoard] =useState([ ])\n  const [isGameOver, setIsGameOver] = useState()\n  const [result, setResult] = useState()\n  const [turn, setTurn] = useState()\n  useEffect(() => {\n    initGame()\n    const subscribe = gameSubject.subscribe((game) => {setBoard(game.board)\n    setBoard(game.board)\n    setIsGameOver(game.isGameOver)\n    setResult(game.result)\n    setTurn(game.turn)\n    })\n    return () =>subscribe.unsubscribe();\n  },[])\n  return (\n    <div className=\" d-flex justify-content-center\" id=\"container\" >\n      {isGameOver && (\n        <h2 className=\"vertical-text\">\n          GAME OVER \n          <button onClick={resetGame}>\n            <span className=\"vertical-text\"> NEW GAME</span>\n          </button>\n          </h2>\n      )}\n      <div className=\"w-600 h-600\" id=\"board-container\">\n      <Board board={board} turn={turn}/>\n      </div>\n      {result && <p className=\"vertical-text\">{result}</p>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DndProvider} from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n    <App />\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}